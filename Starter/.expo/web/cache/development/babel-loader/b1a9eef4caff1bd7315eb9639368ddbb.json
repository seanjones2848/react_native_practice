{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/grawr/Projects/react_native/react_native_practice/Starter/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as data from \"./data.json\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sign = _useState2[0],\n      setSign = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pick = _useState4[0],\n      setPick = _useState4[1];\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, !sign ? React.createElement(StartButton, {\n    pick: pick,\n    sign: sign,\n    setPick: setPick,\n    setSign: setSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Hello you \", sign.name, \"!!\"), React.createElement(ZodiacFeeling, {\n    name: sign.name,\n    attribute: sign.attribute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })));\n}\n\nfunction StartButton(props) {\n  console.log(props);\n  return props.sign ? React.createElement(React.Fragment, null) : props.pick ? React.createElement(PickZodiacButtons, {\n    setSign: props.setSign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }) : React.createElement(Button, {\n    onPress: function onPress() {\n      props.setPick(true);\n    },\n    title: \"Press here to pick your Zodiac!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction PickZodiacButtons(props) {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: data.signs,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Button, {\n        onPress: function onPress() {\n          props.setSign(item);\n        },\n        title: item.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ZodiacFeeling(props) {\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isExcited = _useState6[0],\n      setIsExcited = _useState6[1];\n\n  var excitedString = \"Calm this \" + props.name + \" down!\";\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"This \", props.name, \" sign is feeling \", props.attribute, \" and \", isExcited ? \"Excited!\" : \"Calm.\"), React.createElement(Button, {\n    onPress: function onPress() {\n      setIsExcited(false);\n    },\n    disabled: !isExcited,\n    title: isExcited ? excitedString : \"Thank you.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction ZodiacTranslate(props) {\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var inputString = \"Try some \" + props.sign + \" translation!\";\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: inputString,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    defaultValue: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      padding: 10,\n      fontsize: 42\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, text.split(' ').map(function (word) {\n    return word && props.emoji;\n  }).join(' ')));\n}\n\nfunction ListSigns() {\n  var _this2 = this;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: data.signs,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, item.name, \" + \", item.emoji);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/grawr/Projects/react_native/react_native_practice/Starter/App.js"],"names":["StatusBar","React","useState","data","App","sign","setSign","pick","setPick","styles","container","name","attribute","StartButton","props","console","log","PickZodiacButtons","signs","item","ZodiacFeeling","isExcited","setIsExcited","excitedString","ZodiacTranslate","text","setText","inputString","height","padding","fontsize","split","map","word","emoji","join","ListSigns","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAYA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;AAGA,OAAO,KAAKC,IAAZ;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACLF,QAAQ,CAAC,CAAD,CADH;AAAA;AAAA,MACtBG,IADsB;AAAA,MAChBC,OADgB;;AAAA,mBAELJ,QAAQ,CAAC,KAAD,CAFH;AAAA;AAAA,MAEtBK,IAFsB;AAAA,MAEhBC,OAFgB;;AAI5B,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,IAAD,GACC,oBAAC,WAAD;AACA,IAAA,IAAI,EAAEE,IADN;AAEA,IAAA,IAAI,EAAEF,IAFN;AAGA,IAAA,OAAO,EAAEG,OAHT;AAIA,IAAA,OAAO,EAAEF,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAQC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaL,IAAI,CAACM,IADlB,OADF,EAIE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAEN,IAAI,CAACM,IADb;AAEE,IAAA,SAAS,EAAEN,IAAI,CAACO,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CATJ,CADF;AAsBD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACEA,KAAK,CAACT,IAAN,GACE,yCADF,GAGES,KAAK,CAACP,IAAN,GACE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEO,KAAK,CAACR,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbQ,MAAAA,KAAK,CAACN,OAAN,CAAc,IAAd;AACD,KAHH;AAIE,IAAA,KAAK,EAAC,iCAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN;AAgBD;;AAED,SAASS,iBAAT,CAA2BH,KAA3B,EAAkC;AAAA;;AAChC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEP,IAAI,CAACe,KADb;AAEE,IAAA,UAAU,EAAE;AAAA,UAAEC,IAAF,QAAEA,IAAF;AAAA,aACV,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbL,UAAAA,KAAK,CAACR,OAAN,CAAca,IAAd;AACD,SAHH;AAIE,QAAA,KAAK,EAAEA,IAAI,CAACR,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD;;AAED,SAASS,aAAT,CAAuBN,KAAvB,EAA8B;AAAA,mBACQZ,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,MACnBmB,SADmB;AAAA,MACRC,YADQ;;AAE1B,MAAMC,aAAa,GAAG,eAAeT,KAAK,CAACH,IAArB,GAA4B,QAAlD;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUI,KAAK,CAACH,IADhB,uBACuCG,KAAK,CAACF,SAD7C,WAC6DS,SAAS,GAAG,UAAH,GAAe,OADrF,CADJ,EAII,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AACXC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHL;AAII,IAAA,QAAQ,EAAE,CAACD,SAJf;AAKI,IAAA,KAAK,EAAEA,SAAS,GAAGE,aAAH,GAAmB,YALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAcH;;AAED,SAASC,eAAT,CAAyBV,KAAzB,EAAgC;AAAA,mBACJZ,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,MACrBuB,IADqB;AAAA,MACfC,OADe;;AAE5B,MAAMC,WAAW,GAAG,cAAcb,KAAK,CAACT,IAApB,GAA2B,eAA/C;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AAACkB,MAAAA,MAAM,EAAE;AAAT,KADX;AAEI,IAAA,WAAW,EAAED,WAFjB;AAGI,IAAA,YAAY,EAAE,sBAAAF,IAAI;AAAA,aAAIC,OAAO,CAACD,IAAD,CAAX;AAAA,KAHtB;AAII,IAAA,YAAY,EAAEA,IAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,CAACM,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAACC,IAAD;AAAA,WAAUA,IAAI,IAAInB,KAAK,CAACoB,KAAxB;AAAA,GAApB,EAAmDC,IAAnD,CAAwD,GAAxD,CADL,CAPJ,CADJ;AAaH;;AAED,SAASC,SAAT,GAAqB;AAAA;;AACjB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEP,IAAI,CAACe,KADb;AAEE,IAAA,UAAU,EAAE;AAAA,UAAEC,IAAF,SAAEA,IAAF;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACR,IAAZ,SAAqBQ,IAAI,CAACe,KAA1B,CADU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD;;AAEH,IAAMzB,MAAM,GAAG4B,UAAU,CAACC,MAAX,CAAkB;AAC7B5B,EAAAA,SAAS,EAAE;AACP6B,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["// I want to:\n// ask for sign\n// provide function based on sign\n// ability to cancel selection, pick again\n\n// components:\n// controller/container\n// entry button\n// cancel button\n// zodiac picker\n// zodic fun\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { ScrollView, FlatList, StyleSheet, Text, TextInput, View, Image, Button } from 'react-native';\n\nimport * as data from './data.json';\n\n\nexport default function App() {\n  const[sign, setSign] = useState(0);\n  const[pick, setPick] = useState(false);\n\n  return (\n    <ScrollView>\n      {!sign ? (\n        <StartButton\n        pick={pick}\n        sign={sign}\n        setPick={setPick}\n        setSign={setSign}\n      />\n      ) : (\n        <View style={styles.container}>\n          <Text>\n            Hello you {sign.name}!!\n          </Text>\n          <ZodiacFeeling \n            name={sign.name}\n            attribute={sign.attribute}\n          />\n        </View>\n      )}\n    </ScrollView>\n  );\n}\n\nfunction StartButton(props) {\n  console.log(props)\n  return (\n    props.sign ? (\n      <></>\n    ) : (\n      props.pick ? (\n        <PickZodiacButtons setSign={props.setSign}/>\n      ) : (\n        <Button\n          onPress={() => {\n            props.setPick(true)\n          }}\n          title=\"Press here to pick your Zodiac!\"\n        />\n      )\n    )\n  )\n}\n\nfunction PickZodiacButtons(props) {\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={data.signs}\n        renderItem={({item}) =>\n          <Button\n            onPress={() => {\n              props.setSign(item)\n            }}\n            title={item.name}\n          />\n        }\n      />\n    </View>\n  )\n}\n\nfunction ZodiacFeeling(props) {\n    const [isExcited, setIsExcited] = useState(true);\n    const excitedString = \"Calm this \" + props.name + \" down!\";\n\n    return (\n        <View style={styles.container}>\n            <Text>\n                This {props.name} sign is feeling {props.attribute} and {isExcited ? \"Excited!\": \"Calm.\"}\n            </Text>\n            <Button\n                onPress={() => {\n                    setIsExcited(false);\n                }}\n                disabled={!isExcited}\n                title={isExcited ? excitedString : \"Thank you.\"}\n            />\n        </View>\n    )\n}\n\nfunction ZodiacTranslate(props) {\n    const [text, setText] = useState('');\n    const inputString = \"Try some \" + props.sign + \" translation!\";\n    return (\n        <View style={styles.container}>\n            <TextInput\n                style={{height: 40}}\n                placeholder={inputString}\n                onChangeText={text => setText(text)}\n                defaultValue={text}\n            />\n            <Text style={{padding: 10, fontsize: 42}}>\n                {text.split(' ').map((word) => word && props.emoji).join(' ')}\n            </Text>\n        </View>\n    )\n}\n\nfunction ListSigns() {\n    return (\n      <View style={styles.container}>\n        <FlatList\n          data={data.signs}\n          renderItem={({item}) =>\n            <Text>{item.name} + {item.emoji}</Text>\n          }\n        />\n      </View>\n    )\n  }\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}