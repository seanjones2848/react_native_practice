{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/grawr/Projects/react_native/react_native_practice/Starter/components.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport function Zodiac(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isExcited = _useState2[0],\n      setIsExcited = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var excitedString = \"Calm this \" + props.sign + \" down!\";\n  var inputString = \"Try some \" + props.sign + \" translation!\";\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: getZodiacSVG(props.sign),\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"This \", props.sign, \" sign is feeling \", props.attribute, \" and \", isExcited ? \"Excited!\" : \"Calm.\"), React.createElement(Button, {\n    onPress: function onPress() {\n      setIsExcited(false);\n    },\n    disabled: !isExcited,\n    title: isExcited ? excitedString : \"Thank you.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: inputString,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    defaultValue: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      padding: 10,\n      fontsize: 42\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, text.split(' ').map(function (word) {\n    return word && props.emoji;\n  }).join(' ')));\n}\n\nfunction getZodiacSVG(sign) {\n  return 'uri: \"https://en.wikipedia.org/wiki/File:' + sign + '.svg\"';\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/grawr/Projects/react_native/react_native_practice/Starter/components.js"],"names":["React","useState","Zodiac","props","isExcited","setIsExcited","text","setText","excitedString","sign","inputString","styles","container","getZodiacSVG","width","height","attribute","padding","fontsize","split","map","word","emoji","join","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,kBACQF,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,MACnBG,SADmB;AAAA,MACRC,YADQ;;AAAA,mBAEFJ,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAEnBK,IAFmB;AAAA,MAEbC,OAFa;;AAG1B,MAAMC,aAAa,GAAG,eAAeL,KAAK,CAACM,IAArB,GAA4B,QAAlD;AACA,MAAMC,WAAW,GAAG,cAAcP,KAAK,CAACM,IAApB,GAA2B,eAA/C;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEC,YAAY,CAACV,KAAK,CAACM,IAAP,CADxB;AAEI,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUZ,KAAK,CAACM,IADhB,uBACuCN,KAAK,CAACa,SAD7C,WAC6DZ,SAAS,GAAG,UAAH,GAAe,OADrF,CALJ,EAQI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AACXC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHL;AAII,IAAA,QAAQ,EAAE,CAACD,SAJf;AAKI,IAAA,KAAK,EAAEA,SAAS,GAAGI,aAAH,GAAmB,YALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AAACO,MAAAA,MAAM,EAAE;AAAT,KADX;AAEI,IAAA,WAAW,EAAEL,WAFjB;AAGI,IAAA,YAAY,EAAE,sBAAAJ,IAAI;AAAA,aAAIC,OAAO,CAACD,IAAD,CAAX;AAAA,KAHtB;AAII,IAAA,YAAY,EAAEA,IAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACW,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,IAAI,CAACa,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAACC,IAAD;AAAA,WAAUA,IAAI,IAAIlB,KAAK,CAACmB,KAAxB;AAAA,GAApB,EAAmDC,IAAnD,CAAwD,GAAxD,CADL,CArBJ,CADJ;AA2BH;;AAED,SAASV,YAAT,CAAsBJ,IAAtB,EAA4B;AACxB,SAAO,8CAA8CA,IAA9C,GAAqD,OAA5D;AACH;;AAED,IAAME,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Text, TextInput, StyleSheet, View, Button, Image } from 'react-native';\n\nexport function Zodiac(props) {\n    const [isExcited, setIsExcited] = useState(true);\n    const [text, setText] = useState('');\n    const excitedString = \"Calm this \" + props.sign + \" down!\";\n    const inputString = \"Try some \" + props.sign + \" translation!\";\n    return (\n        <View style={styles.container}>\n            <Image\n                source={getZodiacSVG(props.sign)}\n                style={{width: 200, height: 200}}\n            />\n            <Text>\n                This {props.sign} sign is feeling {props.attribute} and {isExcited ? \"Excited!\": \"Calm.\"}\n            </Text>\n            <Button\n                onPress={() => {\n                    setIsExcited(false);\n                }}\n                disabled={!isExcited}\n                title={isExcited ? excitedString : \"Thank you.\"}\n            />\n            <TextInput\n                style={{height: 40}}\n                placeholder={inputString}\n                onChangeText={text => setText(text)}\n                defaultValue={text}\n            />\n            <Text style={{padding: 10, fontsize: 42}}>\n                {text.split(' ').map((word) => word && props.emoji).join(' ')}\n            </Text>\n        </View>\n    )\n}\n\nfunction getZodiacSVG(sign) {\n    return 'uri: \"https://en.wikipedia.org/wiki/File:' + sign + '.svg\"'\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}